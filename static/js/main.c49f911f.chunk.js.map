{"version":3,"sources":["components/NavBar/NavBar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MenuItems","name","url","subitems","NavBar","useState","menuOpened","setMenuOpened","closeMenu","className","to","map","item","index","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAWMA,EAAwB,CAC7B,CACCC,KAAM,UACNC,IAAK,SACH,CACFD,KAAM,SACNC,IAAK,WACH,CACFD,KAAM,WACNC,IAAK,YACLC,SAAU,CAAC,CACVF,KAAM,SACNC,IAAK,oBACH,CACFD,KAAM,WACNC,IAAK,sBACH,CACFD,KAAM,WACNC,IAAK,wBAEJ,CACFD,KAAM,UACNC,IAAK,aAIME,EAAmB,WAC/B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAMMC,EAAY,WACjBD,GAAc,IAGf,OACC,sBAAKE,UAAU,SAAf,UAEC,eAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,cAAvB,UACC,8CACA,kDAAoB,wDAGrB,oBAAIA,UAAS,oBAAeH,EAAa,mBAAqB,oBAA9D,SACEN,EAAUW,KAAI,SAACC,EAAMC,GACrB,OACC,6BACC,cAAC,IAAD,CAAMH,GAAIE,EAAKV,IAAKO,UAAU,WAAWK,QAASN,EAAlD,SAA8DI,EAAKX,QAD3DY,QAMZ,qBAAKJ,UAAU,YAAYK,QAzBV,WAClBP,GAAeD,IAwBd,SACEA,EAAa,cAAC,IAAD,IAAqB,cAAC,IAAD,UCvDxBS,MARf,WACE,OACE,cAAC,IAAD,UACE,cAAC,EAAD,OCQSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c49f911f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './NavBar.css';\nimport { AiOutlineMenu, AiOutlineClose } from 'react-icons/ai';\n\ninterface MenuItem {\n\tname: string,\n\turl: string,\n\tsubitems?: MenuItem[]\n}\n\nconst MenuItems: MenuItem[] = [\n\t{\n\t\tname: \"noël\",\n\t\turl: \"/noel\",\n\t}, {\n\t\tname: \"projet\",\n\t\turl: \"/projet\",\n\t}, {\n\t\tname: \"artistes\",\n\t\turl: \"/artistes\",\n\t\tsubitems: [{\n\t\t\tname: \"Sylvie\",\n\t\t\turl: \"/artistes/sylvie\",\n\t\t}, {\n\t\t\tname: \"Chantale\",\n\t\t\turl: \"/artistes/chantale\",\n\t\t}, {\n\t\t\tname: \"Isabelle\",\n\t\t\turl: \"/artistes/isabelle\",\n\t\t}]\n\t}, {\n\t\tname: \"contact\",\n\t\turl: \"/contact\",\n\t}\n]\n\nexport const NavBar: React.FC = () => {\n\tconst [menuOpened, setMenuOpened] = useState(false)\n\n\tconst toggleMenu = () => {\n\t\tsetMenuOpened(!menuOpened)\n\t}\n\n\tconst closeMenu = () => {\n\t\tsetMenuOpened(false)\n\t}\n\n\treturn (\n\t\t<nav className=\"navbar\">\n\n\t\t\t<Link to=\"/\" className=\"navbar-logo\">\n\t\t\t\t<h2>shack choses</h2>\n\t\t\t\t<p>atelier boutique <b>éphémère</b></p>\n\t\t\t</Link>\n\n\t\t\t<ul className={`nav-links ${menuOpened ? \"nav-links-opened\" : \"nav-links-closed\"}`} >\n\t\t\t\t{MenuItems.map((item, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={index}>\n\t\t\t\t\t\t\t<Link to={item.url} className=\"nav-link\" onClick={closeMenu}>{item.name}</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t\t<div className=\"list-icon\" onClick={toggleMenu}>\n\t\t\t\t{menuOpened ? <AiOutlineClose /> : <AiOutlineMenu />}\n\t\t\t</div>\n\t\t</nav>\n\t)\n}\n","import { BrowserRouter } from 'react-router-dom';\nimport { NavBar } from './components/NavBar/NavBar';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <NavBar />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}