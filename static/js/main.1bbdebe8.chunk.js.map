{"version":3,"sources":["globals.tsx","components/Logo.tsx","components/NavBar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Device","theme","background","mainText","mainTextContrast","primary","primaryDark","primaryPale","secondary","secondaryPale","ternary","ternaryPale","d","onMobile","Mobile","valueOf","StyledLink","styled","Link","Logo","p","to","MenuItems","name","url","Nav","nav","NavLinks","ul","menuOpened","NavLink","ListIcon","div","NavBar","useState","setMenuOpened","closeMenu","map","item","index","style","textAlign","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iJAkBYA,E,8EAlBCC,EACJ,CACPC,WAAY,iBACZC,SAAU,qBACVC,iBAAkB,iBAElBC,QAAS,oBACTC,YAAa,mBACbC,YAAa,oBAEbC,UAAW,mBACXC,cAAe,oBAEfC,QAAS,mBACTC,YAAa,uB,SAIHX,O,qBAAAA,I,yBAAAA,M,KASL,IAJqBY,E,UAIfC,GAJeD,EAIQZ,EAAOc,OAHpC,iCAAN,OAAwCF,EAAEG,UAA1C,Q,OCjBKC,EAAaC,YAAOC,IAAPD,CAAH,iNACHhB,EAAaE,UASbgB,EAAwB,SAACC,GACrC,OACC,eAACJ,EAAD,CAAYK,GAAG,IAAf,UACC,6CACA,kDAAoB,yDCVjBC,EAAwB,CAC7B,CAAEC,KAAM,UAAQC,IAAK,SACrB,CAAED,KAAM,SAAUC,IAAK,WACvB,CAAED,KAAM,WAAYC,IAAK,aACzB,CAAED,KAAM,UAAWC,IAAK,aAGnBC,EAAMR,IAAOS,IAAV,uOACgCzB,EAAaI,QAAeJ,EAAaM,YAZ7D,IAqBfoB,EAAWV,IAAOW,GAAV,wbAKXf,EA1BkB,MAoCOZ,EAAaK,aAGf,SAAAc,GAAC,OAAIA,EAAES,WAAa,OAAS,QAIjDC,EAAUb,YAAOC,IAAPD,CAAH,mUAEAhB,EAAaE,SAKJF,EAAaK,YAIhCO,EAKoBZ,EAAaM,aAK9BwB,EAAWd,IAAOe,IAAV,oOAGXnB,EAIQZ,EAAaG,iBAGZH,EAAaE,UAMZ8B,EAAmB,WAC/B,MAAoCC,oBAAS,GAA7C,mBAAOL,EAAP,KAAmBM,EAAnB,KAGMC,EAAY,kBAAMD,GAAc,IAEtC,OACC,eAACV,EAAD,WACC,cAAC,EAAD,IACA,cAACE,EAAD,CAAUE,WAAYA,EAAtB,SACEP,EAAUe,KAAI,SAACC,EAAMC,GACrB,OAAO,oBAAgBC,MAAO,CAAEC,UAAW,UAApC,SACN,cAACX,EAAD,CAAST,GAAIiB,EAAKd,IAAKkB,QAASN,EAAhC,SAA4CE,EAAKf,QADlCgB,QAKlB,cAACR,EAAD,CAAUW,QAbO,kBAAMP,GAAeN,IAatC,SACEA,EAAa,cAAC,IAAD,IAAqB,cAAC,IAAD,UC5FxBc,MARf,WACE,OACE,cAAC,IAAD,UACE,cAAC,EAAD,OCOSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1bbdebe8.chunk.js","sourcesContent":["export const theme = {\n\tcolors: {\n\t\tbackground: \"rgb(0, 18, 26)\",\n\t\tmainText: \"rgb(233, 242, 192)\",\n\t\tmainTextContrast: \"rgb(0, 18, 26)\",\n\n\t\tprimary: \"rgb(41, 102, 163)\",\n\t\tprimaryDark: \"rgb(33, 88, 143)\",\n\t\tprimaryPale: \"rgb(42, 158, 221)\",\n\n\t\tsecondary: \"rgb(255, 166, 0)\",\n\t\tsecondaryPale: \"rgb(255, 191, 73)\",\n\n\t\tternary: \"rgb(255, 91, 85)\",\n\t\tternaryPale: \"rgb(253, 189, 181)\",\n\t}\n}\n\nexport enum Device {\n\tMobile = 700,\n\tDesktop = 2048\n}\n\nexport function mediaScreen(d: Device): string {\n\treturn `@media screen and (max-width: ${d.valueOf()}px)`\n}\n\nexport const onMobile = mediaScreen(Device.Mobile)\n\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom';\nimport { theme } from '../globals';\n\ninterface Props { }\n\nconst StyledLink = styled(Link)<Props>`\n    color: ${theme.colors.mainText};\n    justify-self: flex-start;\n    justify-content: flex-start;\n    margin-left: 20px;\n    cursor: pointer;\n    text-decoration: none;\n    padding-right: 50px;\n`\n\nexport const Logo: React.FC<Props> = (p: Props) => {\n\treturn (\n\t\t<StyledLink to=\"/\">\n\t\t\t<h2>shack chose</h2>\n\t\t\t<p>atelier boutique <b>éphémère</b></p>\n\t\t</StyledLink>\n\t)\n}\n\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AiOutlineMenu, AiOutlineClose } from 'react-icons/ai';\nimport { Logo } from './Logo';\nimport styled from 'styled-components';\nimport { onMobile, theme } from '../globals';\n\nconst navBarHeight = 80;\n\ninterface MenuItem { name: string, url: string }\n\nconst MenuItems: MenuItem[] = [\n\t{ name: \"noël\", url: \"/noel\" },\n\t{ name: \"projet\", url: \"/projet\" },\n\t{ name: \"artistes\", url: \"/artistes\" },\n\t{ name: \"contact\", url: \"/contact\" }\n]\n\nconst Nav = styled.nav`\n    background: linear-gradient(90deg, ${theme.colors.primary} 0%, ${theme.colors.primaryPale} 100%);\n    height: ${navBarHeight}px;\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    font-size: 1.2rem;\n`\n\nconst NavLinks = styled.ul<{ menuOpened: boolean }>`\n\tdisplay: flex;\n\tjustify-content: flex-end;\n\tlist-style: none;\n\n\t${onMobile} {\n        width: 33%;\n        left: -33%;\n\n        position: absolute;\n        top: ${navBarHeight}px;\n        height: calc(50% - ${navBarHeight}px);\n        flex-direction: column;\n        justify-content: space-around;\n\t\tgap: 20px;\n        background-color: ${theme.colors.primaryDark};\n\n        transition: transform 0.5s ease;\n\t\ttransform: translateX(${p => p.menuOpened ? \"100%\" : \"0%\"});\n\t}\n`\n\nconst NavLink = styled(Link)`\n    text-decoration: none;\n    color: ${theme.colors.mainText};\n    padding: 0.5rem 1rem;\n\n\t:hover, :active {\n\t\tcursor: pointer;\n\t\tbackground-color: ${theme.colors.primaryDark};\n\t\tborder-radius: 4px;\n\t}\n\n\t${onMobile} {\n\t\theight: auto;\n\t\ttext-align: center;\n\n\t\t:hover, :active{\n\t\t\tbackground-color: ${theme.colors.primaryPale};\n\t\t}\n\t}\n`\n\nconst ListIcon = styled.div`\n    display: none;\n\n\t${onMobile} {\n        display: block;\n\t\ttransform: scale(1.3);\n\t\tpadding: 10px;\n\t\tcolor: ${theme.colors.mainTextContrast};\n\n\t\t:hover, :active {\n\t\t\tcolor: ${theme.colors.mainText};\n\t\t\tcursor: pointer;\n\t\t}\n\t}\n`\n\nexport const NavBar: React.FC = () => {\n\tconst [menuOpened, setMenuOpened] = useState(false)\n\n\tconst toggleMenu = () => setMenuOpened(!menuOpened)\n\tconst closeMenu = () => setMenuOpened(false)\n\n\treturn (\n\t\t<Nav>\n\t\t\t<Logo />\n\t\t\t<NavLinks menuOpened={menuOpened}>\n\t\t\t\t{MenuItems.map((item, index) => {\n\t\t\t\t\treturn <li key={index} style={{ textAlign: \"center\" }}>\n\t\t\t\t\t\t<NavLink to={item.url} onClick={closeMenu}>{item.name}</NavLink>\n\t\t\t\t\t</li>\n\t\t\t\t})}\n\t\t\t</NavLinks>\n\t\t\t<ListIcon onClick={toggleMenu}>\n\t\t\t\t{menuOpened ? <AiOutlineClose /> : <AiOutlineMenu />}\n\t\t\t</ListIcon>\n\t\t</Nav>\n\t)\n}\n","import { BrowserRouter } from 'react-router-dom';\nimport { NavBar } from './components/NavBar';\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <NavBar />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}